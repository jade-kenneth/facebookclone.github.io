{"version":3,"sources":["FacebookClone/img/add.png","FacebookClone/Login.js"],"names":["ProfilePreview","props","useState","username","password","login","setLogin","handleChange","e","user","target","name","pass","value","className","dataProfile","map","data","id","removeProfile","loginProfile","onClick","addAccount","src","add","alt","type","onChange","placeholder","to","href","createAccount","Profile","profile","profilePic","Login","AuthorizedUserData","authorizedData","dispatch","login_data","loginData","setLoginData","useFetch","loading","useEffect","window","alert","passwords","setPassword","isCorrect","setIsCorrect","showLabel","setShowLabel","fullName","userName","email","signup","setSignUp","login_btn","useRef","emailRef","passRef","handleChangePass","correctpass","console","log","action","handleChangeSignUp","preventDefault","Fragment","isModalOpen","onSubmit","registered","axios","post","then","response","catch","err","isActive","activeAccount","lastname","ref","style","marginRight","color","substring","lastIndexOf","AUTH_ACCOUNT","isAddAccount","isCreateAccount","firstName","payload","newProfiles","filter"],"mappings":"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","file":"static/js/4.5b1bb7b8.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/add.eae3a8a0.png\";","import React, {useState,useRef, useEffect} from 'react';\r\n\r\nimport add from './img/add.png';\r\nimport { login_data } from './login_data';\r\nimport { Link } from 'react-router-dom';\r\nimport { AuthorizedUserData} from './contexts/UserContext';\r\nimport {useFetch} from './custom-hooks/useFetch';\r\nimport axios from 'axios';\r\n\r\nconst Login = () => {\r\n\r\n    const {authorizedData,dispatch} = AuthorizedUserData();\r\n    const [loginData, setLoginData] = useState(login_data);\r\n    const {data: current_user_logged, loading} = useFetch('http://localhost:8000/users');\r\n    useEffect(() => {\r\n        window.alert(\"THIS PROJECT IS STILL ON WORK SOME FUNCTIONS ARE NOT AVAILABLE. \\nFOR CHECKING, USE EXISTING ACCOUNTS AND USE USERS LASTNAME AS PASSWORD EX: zuckerberg (lowercase)\");\r\n    },[])\r\n    const [passwords, setPassword] = useState('');\r\n    const [isCorrect, setIsCorrect] = useState(false);\r\n    const [showLabel, setShowLabel] = useState(false);\r\n    \r\n    const closeModal = () => {\r\n        dispatch({type: 'CLOSE_MODAL'})\r\n        setPassword('');\r\n    }\r\n    const loginProfile = (id) => {\r\n        dispatch({type: \"LOGIN_PROFILE\", payload: id})\r\n    }\r\n    const removeProfile = (id) =>{\r\n        const newProfiles = loginData.filter((data) => \r\n            data.id !== id\r\n        )\r\n        setLoginData(newProfiles);\r\n    }\r\n    const createAccount = () => {\r\n        dispatch({type: 'CREATE_ACCOUNT'})\r\n    }\r\n    const addAccount = () => {\r\n        dispatch({type: 'ADD_ACCOUNT'});\r\n    }\r\n    \r\n    const [signup, setSignUp] = useState({\r\n        fullName: '',\r\n        userName: '',\r\n        email: '',\r\n        password: ''\r\n    })\r\n    // const {signup} = useAuth()\r\n    const login_btn = useRef(null);\r\n    const emailRef = useRef()\r\n    const passRef = useRef()\r\n    const confirmpassRef = useRef()\r\n    const handleChangePass = (e) => {\r\n        const pass = e.target.value;\r\n        const correctpass = e.target.name;\r\n        setPassword(pass);\r\n        if(pass == correctpass)\r\n        {\r\n            console.log('correct');\r\n            setIsCorrect(true);\r\n        }\r\n        else{\r\n            console.log('wrong');\r\n            setIsCorrect(false);\r\n            \r\n        }\r\n        \r\n    }\r\n    const action = () =>{\r\n        setShowLabel(!showLabel);\r\n        setPassword('');\r\n    }\r\n    const handleChangeSignUp = (e) => {\r\n        e.preventDefault();\r\n        const name = e.target.name;\r\n        const value = e.target.value;\r\n        setSignUp({...signup, [name]:value})\r\n    }\r\n    const handleSubmitSignUp = (e) =>{\r\n        e.preventDefault();\r\n\r\n        const registered = {\r\n            fullName: signup.fullName,\r\n            userName: signup.userName,\r\n            email: signup.email,\r\n            password: signup.password\r\n        }\r\n        console.log(registered.fullName);\r\n        axios.post('http://localhost:4000/app/signup', registered).then((response) => console.log(response.data)).catch(err => console.log(\"error \" , err))\r\n        setSignUp({fullName: '', userName: '', email: '', password: ''});\r\n        dispatch({type: 'CLOSE_MODAL'})\r\n    }\r\n    return (\r\n        <React.Fragment >\r\n        \r\n        <div  className=\"container\">\r\n        {authorizedData.isModalOpen && \r\n            <div className=\"modal-container\">\r\n            <form className=\"modal\" onSubmit={handleSubmitSignUp}>\r\n                    {/* {console.log(\"create \" + isCreateAccount)}\r\n                    {console.log(\"add \" + isAddAccount)} */}\r\n                    <button className=\"close-modal\" onClick={() => closeModal()}>&times;</button>\r\n                    {\r\n                        authorizedData.isActive && authorizedData.activeAccount.map((data) => {\r\n                            const {id,profile, username, lastname, password,email} = data;\r\n                            return (\r\n                                <React.Fragment key={id}>\r\n                                    <div  className=\"modal-login\">\r\n                                        <img src={profile} className=\"profile\"/>\r\n                                        <p>{username + \" \" +lastname}</p>\r\n                                        <input type=\"password\" placeholder=\"Password\" name={password}\r\n                                        value={passwords} ref={login_btn}  onChange={handleChangePass}/>\r\n                                        {showLabel && <p style={{marginRight:'auto', color: 'red'}}>Wrong password try again!</p> }\r\n                                            {isCorrect ? <Link to={`/${email.substring(0, email.lastIndexOf(\"@\"))}/`} className=\"login-btn\" onClick={() => dispatch({type: \"SET_AUTH\", AUTH_ACCOUNT: authorizedData.activeAccount })} >Login</Link>\r\n                                            :<Link to=\"/\" onClick={action}  className=\"login-btn\">Login</Link>\r\n                                        }\r\n                                    </div>\r\n                                    </React.Fragment>\r\n                            )\r\n                        })\r\n                    }\r\n                    {authorizedData.isAddAccount && <div>\r\n                        <h3 className=\"login-text\">Login to facebook</h3>\r\n                        <input type=\"email\"/>\r\n                        <input type=\"password\" />\r\n                        <button type=\"submit\"><Link to=\"/user/\">Login</Link></button>\r\n                        <p>Forgot Password</p>\r\n                    </div>}\r\n                    {authorizedData.isCreateAccount && <div className=\"createAccount\" >\r\n                        <h2>Sign Up</h2>\r\n                        <p>It's quick and easy</p>\r\n                        <hr/>\r\n                        <input name=\"fullName\" id=\"fullName\" type=\"text\" placeholder=\"Fullname\" value={signup.firstName} onChange={handleChangeSignUp} />\r\n                        <input name=\"userName\" id=\"userName\" type=\"text\" placeholder=\"Username\" value={signup.userName} onChange={handleChangeSignUp}  />\r\n                        <input name=\"email\" id=\"email\" type=\"email\" placeholder=\"Email\" ref={emailRef} value={signup.email} onChange={handleChangeSignUp}/>\r\n                        <input name=\"password\" id=\"signup_password\" type=\"password\" placeholder=\"Password\" ref={passRef} value={signup.password} onChange={handleChangeSignUp} />\r\n                        <input  type=\"submit\" value=\"Sign Up\"/>\r\n                    </div>\r\n                    } \r\n                    \r\n                        \r\n                    \r\n                    </form>    \r\n                </div>\r\n            \r\n    \r\n        }\r\n         \r\n            <ProfilePreview loginProfile={loginProfile} dataProfile={loginData} removeProfile={removeProfile} addAccount={addAccount} createAccount={createAccount}/>\r\n        </div>\r\n        </React.Fragment>\r\n    )\r\n    \r\n}\r\nconst ProfilePreview = (props) => {\r\n    const [login, setLogin] = useState({username: '', password: ''});\r\n    \r\n    const handleChange = (e) => {\r\n        const user = e.target.name;\r\n        const pass = e.target.value;\r\n        setLogin({...login, [user]: pass});\r\n    }\r\n    return (\r\n        <>\r\n            \r\n            <div className=\"Login\">\r\n           \r\n                <div className=\"logins\">\r\n                <h1 className=\"brand-title\">fᾶcebook</h1>\r\n                    <h3>Recent Logins</h3>\r\n                    <p>Click your picture o add an account.</p>\r\n                    <div className=\"profile-preview\">\r\n                        {props.dataProfile.map((data) => {\r\n                            const {id} = data;\r\n                            \r\n                            return(\r\n                                <div className=\"profile-preview-container\" key={id} >\r\n                                    <Profile   {...data } removeProfile={props.removeProfile} loginProfile={props.loginProfile} /> \r\n\r\n                                </div>\r\n                            )\r\n                            \r\n                        })} \r\n                        <div className=\"addAccount\" onClick={() => props.addAccount()}>\r\n                            <img src={add} alt=\"\"/>\r\n                            <p>Add account</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"login-container\">\r\n                    <form className=\"loginForm\" >\r\n                        <input type=\"text\" name=\"username\" id=\"username\" value={login.username} onChange={handleChange} placeholder=\"Email or Phone Number\"/>\r\n                        <input type=\"password\" name=\"password\" id=\"password\" value={login.password} onChange={handleChange} placeholder=\"Password\"/>\r\n                        <button type=\"submit\"><Link to=\"/user/:id\">Login</Link></button>\r\n                        \r\n                        <a href=\"#\">Forgot Password</a>\r\n                        <hr/>\r\n                        <input type=\"button\" name=\"\" id=\"\" value=\"Create New Account\" onClick={() => props.createAccount()}/>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n            \r\n        </>\r\n    )\r\n}\r\nconst Profile = ({profile, id, username, removeProfile, loginProfile, profilePic}) =>  {\r\n    \r\n\r\n    \r\n    return (\r\n        <>\r\n        \r\n        \r\n            <button className=\"close-btn\" onClick={() => removeProfile(id)}>&times;</button>\r\n            {/* when clicked the unique id will be sent to reducer and filter the data*/}\r\n            <img src={profile} className=\"current_logged_profile_img\" alt=\"\" onClick={() =>  loginProfile(id)}/>\r\n            <p>{username}</p>\r\n        \r\n    </>\r\n    )\r\n}\r\n\r\nexport default Login\r\n"],"sourceRoot":""}